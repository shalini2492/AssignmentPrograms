package Utility;

import java.util.Random;
import java.util.Scanner;

public class Utility {
	Utility utility= new Utility();
			  Scanner scanner= new Scanner(System.in);
		  /* Scanner is used to obtain input of primitive types like int, double, long etc.
		   * 
		   */
		 
	  public String InputString()
	  {
		  return scanner.nextLine();	 
	  }
	  
	  /****This method will return input of string type to a specified method ***/ 
	  
	  public Integer InputInteger()
	  {
		  return scanner.nextInt();
	  }
	  /****This method will return input of string type to a specified method ***/ 
	  
	  
	  public String replaceString(String template,String username)
	  {
		  System.out.println("Enter username");
		  if(username.length() < 3)
		{
			  System.out.println("Please enter string of more than 3 characters");
		  }
		  
		  /****This method will replace template with the username that is accepted by user.***/
		  
		  else
		  {
			  String output = utility.replaceString("<<username>>", username);
			  return output;
		  }
	  }
	  


/***********************************Flip coin******************************/

static Random random = new Random();
	public int HeadorTail(int n)
	{
	long headper=0, tailper=0;
	int headcount=0, tailcount=0;
	//int heads, tail, n,i;
	
	
	System.out.println("Enter the no. of times you want to flip the coin");
	if(n < 0)
	{
		System.out.println("Please enter valid no.");
		n = scanner.nextInt();
		HeadorTail(n);
	}
	
	/****Here input is checked whether it is valid or not. And if invalid then user is requested
	 * to enter a valid input and the method is called inside a method again.
	 * 
	 */
	for(int i=0; i<n; i++)
	{
		double rand = Math.random();
	System.out.println("Random no. are" +rand);
  if(rand < 0.5)
	    {
	    	System.out.println("The occurrence of tail" +i);
	    	tailcount = tailcount + 1;
	    }
	    else
	    		System.out.println("The occurrence of heads" +i);
  			headcount = headcount +1;
	    	
	}
	
	/***Here the for loop to read random no. generated by using random() and then checked 
	 * if coin is head or tail after flipping. Headcount and tailcount are incremented 
	 * for computing headcount vs tailcount.
	 */
	
	System.out.println("Head count" +headcount);
	System.out.println("tail count" +tailcount);
	


/***Here headcount and tailcount is computed so as to compare their count and display output.
 * 
 */
	
	if(headcount>tailcount)
	{
		System.out.println("Headcount is greater");
	}
	else
		System.out.println("tailcount is greater");

}
	

/*********************Leap Year*****************************/

public void LeapYear(int yearno) 
{
	/**This method will check if the user input is of 4-digit and if it is invalid 
	 * then method is called recursively requesting user a valid input. valueOf method
	 * is used of String class to obtain value of yearno. and then its length is
	 * calculated and checked.
	 */
	if(String.valueOf(yearno).length()<4)
	{
		System.out.println("Enter 4-digit year");
		yearno = scanner.nextInt();
		LeapYear(yearno);
		
	}
	else
	   utility.checkLeapYear(yearno);

}


public void checkLeapYear(int yearno)
{
	if(yearno%4 == 0) /**This method will check if given year is a leap year.*/
 {
	if(yearno%100 == 0) /*when all these conditions will be true the we can say
	given year is a leap year.*/ 
   {
		if(yearno%400 == 0)
	  {
		System.out.println(yearno+ "is a leap year");
	  }
   }
 }
	else
		System.out.println(yearno+ "is not a leap year");
}


/*************************Power 2********************************/

public int power(int pow, int base)
{
	System.out.println("Enter the power"); 
	if(pow > 31) /*The input taken by the user should not exceed beyond 31. If
	it is more than 31 then user isn requested to reenter new and valid input.*/
	{
		System.out.println("Please enter valid power");
		pow = scanner.nextInt();
	   power(pow, base);
	}
	else
		utility.calculat(i);
	 
}

private int calculat(int i)
{
	int base=2, pow=1;
	for(i=0; pow<i; i++)
	{
		pow = pow*base;
	}
	System.out.println("2 to the power" +pow+ "is" +i);
}

/********************Harmonic Number*****************************/

public void harmonicNo()
{
 int sum;
  while(sum != 0)
	  
 {
	  for(int i=2; i<sum; i++)
	  {
	 sum += (double) 1/i;
	  }
	 
 }
 System.out.println("The harmonic no. is" +sum);

}

/**********************Prime Factorization**************************/

public int factors(int n)
{
	if(n%2 == 0)
	{
		System.out.println("" +n);
	}
	else
		System.out.println("");
	for(int i=3; i<n; i=i+2)
	{
		while(n%i == 0)
		{
		System.out.println("" +i);
	}
}
}

/************************Gambler*************************************/

public void gambling()
{
	for(int t=0; t < trials; t++) /*for loop to iterate till the no. of trials */
	{
		public int stake, target, bet, won, trials;
		int cash = stake;    
	 while(cash > 0 && cash <= target)
		{
			bet++;
			if(Math.random() < 0.5)
			cash++;
			else
				cash--;
			
		}
		if(cash == target)
		
			won++;
		
	}
	
	System.out.println(won+ "wins of" +trials);
	System.out.println("Percentage of win over trials "  +100 * won/trials);
	System.out.println("Average # bet       " +1.0 *bet/trials);
}


/*************************Distinct Coupon Number************************/

public int dist_coupon(int n)
{
	for(int i=0; i<n; i++)
	{
	double randno= Math.random();
	if(i != randno)
	{
		System.out.println(i+ "is a distinct coupon number");
	}
	else
		System.out.println("Not  a distinct coupon number");
	
}
}

/***********************2D array*****************************************/

public void twodarr()
{
	int a= scanner.nextInt();
	double b = scanner.nextDouble();
	boolean c = scanner.nextBoolean();\
	public boolean InputBoolean()
	{
		return scanner.nextBoolean();
	}
	public double InputDouble()
	{
		return scanner.nextDouble();
	}
	
	for(int i=0; i<2; i++)
	{
		for(int j=0; j<2; j++)
		{
		System.out.println(a[i][j]);
	}
  }
	for(int i=0; i<2; i++)
	{
		for(int j=0; j<2; j++)
		{
		System.out.println(b[i][j]);
	}
  }
	for(int i=0; i<2; i++)
	{
		for(int j=0; j<2; j++)
		{
		System.out.println(c[i][j]);
	}
  }
}

/********************Sum of Three integers************************/

public int triplets(int a[])
{

	int b[], n;
	boolean flag;
	for(int i=0; i<n-2; i++)
	{
		for(int j=i+1; j<n-1; j++)
		{
			for(int k=j+1; k<n; k++)
			{
				if(a[i]+a[j]+a[k] == 0)
				{
					
					flag = false;;
				}
			}
		}
	}
}



/*************************Distance calculation*************************/

public void dist()
{
	public int i=0, j=0;
   public int x, y;
  double c = Math.pow(x, 2);
  double d = Math.pow(y, 2);
  double dn = c * d;
  double diff = (c-i) * (d-j);
  
}
}
